import"./firebase-init-WlDQV2z_.js";function b(n,t,i){document.querySelectorAll(".delete-message").forEach(e=>{e.onclick=function(){const r=this.getAttribute("data-id");confirm("Удалить сообщение?")&&fetch(`/chats/${t}/${i}/messages/${r}`,{method:"DELETE",headers:{"X-CSRF-TOKEN":n,"Content-Type":"application/json"}}).then(o=>o.json()).then(o=>{o.success?this.closest("li").remove():alert(o.error||"Ошибка удаления сообщения")}).catch(o=>console.error("Ошибка:",o))}}),document.querySelectorAll(".pin-message").forEach(e=>{e.onclick=function(){const r=this.getAttribute("data-id");fetch(`/chats/${t}/${i}/messages/${r}/pin`,{method:"POST",headers:{"X-CSRF-TOKEN":n,"Content-Type":"application/json"}}).then(o=>o.json()).then(o=>{if(o.success){this.innerHTML=`<img src="${unpinImgUrl}" alt="Открепить">`,this.classList.remove("pin-message"),this.classList.add("unpin-message");let c=this.closest("li");if(c.classList.add("pinned"),c&&!c.querySelector(".pinned-label")){let a=document.createElement("span");a.classList.add("pinned-label"),a.textContent=" [Закреплено]",c.querySelector("div").appendChild(a)}filterMessages()}else console.error("Ошибка закрепления сообщения:",o.error),alert(o.error||"Ошибка закрепления сообщения")}).catch(o=>{console.error("Ошибка при закреплении сообщения:",o)})}}),document.querySelectorAll(".unpin-message").forEach(e=>{e.onclick=function(){const r=this.getAttribute("data-id");fetch(`/chats/${t}/${i}/messages/${r}/unpin`,{method:"POST",headers:{"X-CSRF-TOKEN":n,"Content-Type":"application/json"}}).then(o=>o.json()).then(o=>{if(o.success){this.innerHTML=`<img src="${pinImgUrl}" alt="Закрепить">`,this.classList.remove("unpin-message"),this.classList.add("pin-message");let c=this.closest("li");c.classList.remove("pinned");let a=c.querySelector(".pinned-label");a&&a.remove(),filterMessages()}else alert(o.error||"Ошибка открепления сообщения")}).catch(o=>console.error("Ошибка:",o))}})}function y(n){return new Date(n).toLocaleTimeString("ru-RU",{hour:"2-digit",minute:"2-digit"})}function m(n){const t={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#039;"};return n.replace(/[&<>"']/g,i=>t[i])}function S(){const n=document.getElementById("chat-messages");n.scrollTop=n.scrollHeight}function $(n){document.querySelectorAll("#chat-messages ul li").forEach(t=>{t.style.display=n?t.classList.contains("pinned")?"":"none":""})}function E(n,t,i,e,r,o){const c=document.getElementById("chat-messages");if(!c){console.error("Элемент chat-messages не найден!");return}const a=c.querySelector("ul");if(!a){console.error("Список сообщений не найден в chat-messages!");return}let f="",u=!1;n.forEach(s=>{if(!i.has(s.id)){if(u=!0,s.message_type==="notification"||s.is_system)f+=`
                    <li class="system-notification" data-id="${s.id}">
                        ${s.message}
                        <span class="message-time">${y(s.created_at)}</span>
                    </li>
                `;else{const h=s.sender_id===t,v=s.message_type==="notification"?"notification-message":h?"my-message":"other-message",N=s.is_pinned?"pinned":"";let p="";h&&s.is_read&&(p='<span class="read-status">✓✓</span>');let d="";s.message&&s.message.trim()!==""&&(s.message_type==="notification"?d+=s.message:d+=`<div>${m(s.message)}</div>`),s.attachments&&Array.isArray(s.attachments)&&s.attachments.length>0&&s.attachments.forEach(l=>{l&&l.mime&&l.mime.startsWith("image/")?d+=`<div><img src="${l.url}" alt="Image" style="max-width:100%; border-radius:4px;"></div>`:l&&l.url&&(d+=`<div><a href="${l.url}" target="_blank">${m(l.original_file_name||"Файл")}</a></div>`)}),d.trim()===""&&(d='<div style="color:#888;">[Пустое сообщение]</div>');let g="";h&&(g=`
                        <div class="message-controls">
                            <button class="delete-message" data-id="${s.id}"><img src="${deleteImgUrl}" alt="Удалить"></button>
                            ${s.is_pinned?`<button class="unpin-message" data-id="${s.id}"><img src="${unpinImgUrl}" alt="Открепить"></button>`:`<button class="pin-message" data-id="${s.id}"><img src="${pinImgUrl}" alt="Закрепить"></button>`}
                        </div>
                    `),f+=`
                    <li class="${v} ${N}" data-id="${s.id}">
                        <div><strong>${h?"Вы":m(s.sender_name||"Неизвестно")}</strong></div>
                        ${d}
                        ${g}
                        <span class="message-time">${y(s.created_at)}</span>
                        ${p}
                    </li>
                `}i.add(s.id)}}),f&&u&&(a.insertAdjacentHTML("beforeend",f),S(),b(e,r,o),$())}document.addEventListener("DOMContentLoaded",()=>{if("Notification"in window&&Notification.permission!=="granted"&&Notification.permission!=="denied"){const n=document.createElement("div");n.className="notification-permission-banner",n.innerHTML=`
            <div class="notification-banner-content">
                <p>Разрешите уведомления, чтобы быть в курсе новых сообщений</p>
                <button id="allow-notifications" class="btn btn-primary">Разрешить</button>
                <button id="close-notification-banner" class="btn btn-secondary">Позже</button>
            </div>
        `,document.body.appendChild(n),document.getElementById("allow-notifications").addEventListener("click",()=>{Notification.requestPermission().then(t=>{console.log("Пользователь "+(t==="granted"?"разрешил":"не разрешил")+" уведомления"),n.remove()})}),document.getElementById("close-notification-banner").addEventListener("click",()=>{n.remove()})}});class w{constructor(){this.notifications=[],this.listeners=[],this.userId=null,this.enabled=!0,this.checkInterval=null,this.lastCheck=Date.now()}init(t){return this.userId=t,console.log("[Notification System] Initialized for user:",t),this.startChecking(),this.registerServiceWorker(),this}registerServiceWorker(){"serviceWorker"in navigator&&navigator.serviceWorker.register("/notification-sw.js").then(t=>{console.log("[Notification System] Service Worker registered:",t)}).catch(t=>{console.error("[Notification System] Service Worker registration failed:",t)})}startChecking(t=1e4){this.checkInterval&&clearInterval(this.checkInterval),this.checkInterval=setInterval(()=>{this.checkForNewNotifications()},t),this.checkForNewNotifications(),console.log(`[Notification System] Started checking every ${t}ms`)}stopChecking(){this.checkInterval&&(clearInterval(this.checkInterval),this.checkInterval=null,console.log("[Notification System] Stopped checking"))}checkForNewNotifications(){var i;if(!this.userId||!this.enabled)return;const t=this.lastCheck;this.lastCheck=Date.now(),fetch(`/api/notifications?since=${t}&user_id=${this.userId}`,{method:"GET",headers:{"Content-Type":"application/json","X-Requested-With":"XMLHttpRequest","X-CSRF-TOKEN":(i=document.querySelector('meta[name="csrf-token"]'))==null?void 0:i.getAttribute("content")}}).then(e=>{if(!e.ok)throw new Error("Network response was not ok");return e.json()}).then(e=>{e&&Array.isArray(e.notifications)&&e.notifications.length>0&&(console.log("[Notification System] Received new notifications:",e.notifications),e.notifications.forEach(r=>{this.processNotification(r)}))}).catch(e=>{console.error("[Notification System] Error fetching notifications:",e)})}processNotification(t){console.log("[Notification System] Processing notification:",t),this.notifications.push(t),this.notifyListeners(t),this.showNotification(t)}showNotification(t){if(window.Notification&&Notification.permission==="granted"){const i=new Notification(t.title||"Новое уведомление",{body:t.body||t.message||"",icon:t.icon||"/storage/icon/notification.png"});i.onclick=()=>{console.log("[Notification System] Notification clicked:",t),t.url&&window.open(t.url,"_blank"),i.close()}}else this.showCustomNotification(t)}showCustomNotification(t){let i=document.getElementById("custom-notification-container");i||(i=document.createElement("div"),i.id="custom-notification-container",i.style.position="fixed",i.style.top="20px",i.style.right="20px",i.style.zIndex="9999",document.body.appendChild(i));const e=document.createElement("div");e.className="custom-notification",e.innerHTML=`
            <div class="custom-notification-header">
                <strong>${t.title||"Новое уведомление"}</strong>
                <span class="custom-notification-close">&times;</span>
            </div>
            <div class="custom-notification-body">
                ${t.body||t.message||""}
            </div>
        `,e.style.backgroundColor="#ffffff",e.style.border="1px solid #ddd",e.style.borderRadius="8px",e.style.boxShadow="0 2px 10px rgba(0,0,0,0.1)",e.style.padding="15px",e.style.marginBottom="10px",e.style.width="300px",e.style.opacity="0",e.style.transform="translateX(50px)",e.style.transition="all 0.3s ease-in-out",i.appendChild(e),setTimeout(()=>{e.style.opacity="1",e.style.transform="translateX(0)"},10),t.url&&(e.addEventListener("click",()=>{window.location.href=t.url}),e.style.cursor="pointer"),e.querySelector(".custom-notification-close").addEventListener("click",r=>{r.stopPropagation(),this.removeNotification(e)}),setTimeout(()=>{this.removeNotification(e)},5e3)}removeNotification(t){t.style.opacity="0",t.style.transform="translateX(50px)",setTimeout(()=>{t.parentNode&&t.parentNode.removeChild(t)},300)}addListener(t){return typeof t=="function"&&!this.listeners.includes(t)&&(this.listeners.push(t),console.log("[Notification System] Listener added")),this}removeListener(t){const i=this.listeners.indexOf(t);return i!==-1&&(this.listeners.splice(i,1),console.log("[Notification System] Listener removed")),this}notifyListeners(t){this.listeners.forEach(i=>{try{i(t)}catch(e){console.error("[Notification System] Error in listener:",e)}})}requestPermission(){window.Notification&&Notification.requestPermission().then(t=>{console.log("[Notification System] Notification permission:",t)}).catch(t=>{console.error("[Notification System] Permission request error:",t)})}enable(){return this.enabled=!0,console.log("[Notification System] Notifications enabled"),this}disable(){return this.enabled=!1,console.log("[Notification System] Notifications disabled"),this}sendTestNotification(t="Test Notification",i="This is a test notification"){const e={id:`test-${Date.now()}`,title:t,body:i,timestamp:new Date().toISOString(),read:!1,type:"test"};console.log("[Notification System] Sending test notification:",e),this.processNotification(e)}}window.notificationSystem=new w;export{$ as a,y as f,E as r};
